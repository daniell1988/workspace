package com.rest.sociotorcedor.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.rest.sociotorcedor.models.Socio;
import com.rest.sociotorcedor.respositories.SocioRepository;

@RestController
public class SocioController {

    @Autowired
    SocioRepository socioRepository;

    @RequestMapping(method=RequestMethod.GET, value = "/socio")
    public Iterable<Socio> socio() {
        return socioRepository.findAll();
    }

    @RequestMapping(method=RequestMethod.POST, value = "/socio")
    public String save(@RequestBody Socio socio) {
    	if(isCadastrado()) {
    		return "e-mail já cadastrado";
    	}
    	else {
    		socioRepository.save(socio);
            return socio.getId();
    	}
    	
    }

	@RequestMapping(method=RequestMethod.GET, value="/socio/{id}")
    public Socio show(@PathVariable String id) {
        return socioRepository.findOne(id);
    }

//    @RequestMapping(method=RequestMethod.PUT, value="/{id}")
//    public Socio update(@PathVariable String id, @RequestBody Socio campanha) {
//        Socio prod = socioRepository.findOne(id);
//        if(campanha.getProdName() != null)
//            prod.setProdName(campanha.getProdName());
//        if(campanha.getProdDesc() != null)
//            prod.setProdDesc(campanha.getProdDesc());
//        if(campanha.getProdPrice() != null)
//            prod.setProdPrice(campanha.getProdPrice());
//        if(campanha.getProdImage() != null)
//            prod.setProdImage(campanha.getProdImage());
//        campanhaRepository.save(prod);
//        return prod;
//    }

    @RequestMapping(method=RequestMethod.DELETE, value="/socio/{id}")
    public String delete(@PathVariable String id) {
        Socio socio = socioRepository.findOne(id);
        socioRepository.delete(socio);

        return "campanha deleted";
    }
    
    private boolean isCadastrado() {
		return socioRepository.isCadastrado(socio);
	}
}